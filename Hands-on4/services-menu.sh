#!/bin/bash

# Funci√≥n para mostrar el men√∫
function mostrar_menu() {
    echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
    echo "‚ïë                Men√∫ de Opciones              ‚ïë"
    echo "‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£"
    echo "‚ïë 1. üìÅ Listar el contenido de una carpeta     ‚ïë"
    echo "‚ïë 2. üìù Crear un archivo de texto              ‚ïë"
    echo "‚ïë 3. üîç Comparar dos archivos de texto         ‚ïë"
    echo "‚ïë 4. üõ†Ô∏è  Usar comando AWK                       ‚ïë"
    echo "‚ïë 5. üîé Usar comando GREP                      ‚ïë"
    echo "‚ïë 6. ‚ùå Salir                                  ‚ïë"
    echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
    echo -n "Elige una opci√≥n (1-6): "
}

# Opci√≥n 1: Listar el contenido de una carpeta
function listar_contenido() {
    echo -n "üìÇ Introduce la ruta absoluta de la carpeta: "
    read ruta
    if [ -d "$ruta" ]; then
        echo "üìÅ El contenido de la carpeta es:"
        ls -l "$ruta"
    else
        echo "‚ùå Error: No es una carpeta v√°lida o no tienes permisos."
    fi
}

# Opci√≥n 2: Crear un archivo de texto con una l√≠nea de texto
function crear_archivo() {
    echo -n "üìù Introduce el nombre del archivo (con ruta completa si no es en el directorio actual): "
    read archivo
    echo -n "üñãÔ∏è  Introduce el texto a almacenar: "
    read texto
    echo "$texto" > "$archivo"
    if [ $? -eq 0 ]; then
        echo "‚úÖ Archivo creado y texto almacenado en $archivo."
    else
        echo "‚ùå Error al crear el archivo."
    fi
}

# Opci√≥n 3: Comparar dos archivos de texto
function comparar_archivos() {
    echo -n "üìÑ Introduce la ruta del primer archivo: "
    read archivo1
    echo -n "üìÑ Introduce la ruta del segundo archivo: "
    read archivo2
    if [ -f "$archivo1" ] && [ -f "$archivo2" ]; then
        diff "$archivo1" "$archivo2"
        if [ $? -eq 0 ]; then
            echo "‚úÖ Los archivos son iguales."
        else
            echo "‚ùå Los archivos son diferentes."
        fi
    else
        echo "‚ùå Error: Uno o ambos archivos no son v√°lidos."
    fi
}

# Opci√≥n 4: Uso de AWK
function usar_awk() {
    echo -n "üõ†Ô∏è  Introduce la ruta del archivo donde se aplicar√° AWK: "
    read archivo
    if [ -f "$archivo" ]; then
        echo "üõ†Ô∏è  Introduce el patr√≥n o columna que quieres mostrar con AWK (ejemplo: '{print \$1}'): "
        read patron
        awk "$patron" "$archivo"
    else
        echo "‚ùå Error: El archivo no existe."
    fi
}

# Opci√≥n 5: Uso de GREP
function usar_grep() {
    echo -n "üîç Introduce la cadena de texto a buscar con GREP: "
    read cadena
    echo -n "üìÑ Introduce la ruta del archivo donde buscar: "
    read archivo
    if [ -f "$archivo" ]; then
        grep "$cadena" "$archivo"
        if [ $? -ne 0 ]; then
            echo "‚ùå No se encontraron coincidencias."
        fi
    else
        echo "‚ùå Error: El archivo no existe."
    fi
}

# Mostrar saludo inicial con arte ASCII
function mostrar_titulo() {
    echo "**************************************************"
    echo "*     Script by: Yair Hern√°ndez Ochoa            *"
    echo "**************************************************"
}

# Mostrar el t√≠tulo
mostrar_titulo

# Bucle del men√∫
while true; do
    mostrar_menu
    read opcion
    case $opcion in
        1) listar_contenido ;;
        2) crear_archivo ;;
        3) comparar_archivos ;;
        4) usar_awk ;;
        5) usar_grep ;;
        6) echo "üëã Saliendo del programa."; exit 0 ;;
        *) echo "‚ùå Opci√≥n no v√°lida. Int√©ntalo de nuevo." ;;
    esac
    echo ""
done
